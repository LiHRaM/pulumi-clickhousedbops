// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"context"
	"reflect"

	"github.com/LiHRaM/pulumi-clickhousedbops/sdk/go/clickhousedbops/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AuthConfig struct {
	// The password to use to authenticate to ClickHouse
	Password *string `pulumi:"password"`
	// The authentication method to use
	Strategy string `pulumi:"strategy"`
	// The username to use to authenticate to ClickHouse
	Username string `pulumi:"username"`
}

// AuthConfigInput is an input type that accepts AuthConfigArgs and AuthConfigOutput values.
// You can construct a concrete instance of `AuthConfigInput` via:
//
//	AuthConfigArgs{...}
type AuthConfigInput interface {
	pulumi.Input

	ToAuthConfigOutput() AuthConfigOutput
	ToAuthConfigOutputWithContext(context.Context) AuthConfigOutput
}

type AuthConfigArgs struct {
	// The password to use to authenticate to ClickHouse
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The authentication method to use
	Strategy pulumi.StringInput `pulumi:"strategy"`
	// The username to use to authenticate to ClickHouse
	Username pulumi.StringInput `pulumi:"username"`
}

func (AuthConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthConfig)(nil)).Elem()
}

func (i AuthConfigArgs) ToAuthConfigOutput() AuthConfigOutput {
	return i.ToAuthConfigOutputWithContext(context.Background())
}

func (i AuthConfigArgs) ToAuthConfigOutputWithContext(ctx context.Context) AuthConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthConfigOutput)
}

type AuthConfigOutput struct{ *pulumi.OutputState }

func (AuthConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthConfig)(nil)).Elem()
}

func (o AuthConfigOutput) ToAuthConfigOutput() AuthConfigOutput {
	return o
}

func (o AuthConfigOutput) ToAuthConfigOutputWithContext(ctx context.Context) AuthConfigOutput {
	return o
}

// The password to use to authenticate to ClickHouse
func (o AuthConfigOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthConfig) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The authentication method to use
func (o AuthConfigOutput) Strategy() pulumi.StringOutput {
	return o.ApplyT(func(v AuthConfig) string { return v.Strategy }).(pulumi.StringOutput)
}

// The username to use to authenticate to ClickHouse
func (o AuthConfigOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v AuthConfig) string { return v.Username }).(pulumi.StringOutput)
}

type TlsConfig struct {
	// Skip TLS cert verification when using the https protocol. This is insecure!
	InsecureSkipVerify *bool `pulumi:"insecureSkipVerify"`
}

// TlsConfigInput is an input type that accepts TlsConfigArgs and TlsConfigOutput values.
// You can construct a concrete instance of `TlsConfigInput` via:
//
//	TlsConfigArgs{...}
type TlsConfigInput interface {
	pulumi.Input

	ToTlsConfigOutput() TlsConfigOutput
	ToTlsConfigOutputWithContext(context.Context) TlsConfigOutput
}

type TlsConfigArgs struct {
	// Skip TLS cert verification when using the https protocol. This is insecure!
	InsecureSkipVerify pulumi.BoolPtrInput `pulumi:"insecureSkipVerify"`
}

func (TlsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsConfig)(nil)).Elem()
}

func (i TlsConfigArgs) ToTlsConfigOutput() TlsConfigOutput {
	return i.ToTlsConfigOutputWithContext(context.Background())
}

func (i TlsConfigArgs) ToTlsConfigOutputWithContext(ctx context.Context) TlsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsConfigOutput)
}

type TlsConfigOutput struct{ *pulumi.OutputState }

func (TlsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsConfig)(nil)).Elem()
}

func (o TlsConfigOutput) ToTlsConfigOutput() TlsConfigOutput {
	return o
}

func (o TlsConfigOutput) ToTlsConfigOutputWithContext(ctx context.Context) TlsConfigOutput {
	return o
}

// Skip TLS cert verification when using the https protocol. This is insecure!
func (o TlsConfigOutput) InsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TlsConfig) *bool { return v.InsecureSkipVerify }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthConfigInput)(nil)).Elem(), AuthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TlsConfigInput)(nil)).Elem(), TlsConfigArgs{})
	pulumi.RegisterOutputType(AuthConfigOutput{})
	pulumi.RegisterOutputType(TlsConfigOutput{})
}
