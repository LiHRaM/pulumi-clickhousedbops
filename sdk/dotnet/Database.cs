// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Clickhousedbops
{
    /// <summary>
    /// Use the *clickhousedbops_database* resource to create a database in a ClickHouse instance.
    /// 
    /// Known limitations:
    /// 
    /// - Changing the comment on a `database` resource is unsupported and will cause the database to be destroyed and recreated. WARNING: you will lose any content of the database if you do so!
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Clickhousedbops = Pulumi.Clickhousedbops;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var logs = new Clickhousedbops.Database("logs", new()
    ///     {
    ///         ClusterName = "cluster",
    ///         Name = "logs",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Databases can be imported by specifying the UUID.
    /// 
    /// Find the UUID of the database by checking system.databases table.
    /// 
    /// ```sh
    /// $ pulumi import clickhousedbops:index/database:Database example xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    /// ```
    /// 
    /// It's also possible to import databases using the name:
    /// 
    /// ```sh
    /// $ pulumi import clickhousedbops:index/database:Database example databasename
    /// ```
    /// 
    /// IMPORTANT: if you have a multi node cluster, you need to specify the cluster name!
    /// 
    /// ```sh
    /// $ pulumi import clickhousedbops:index/database:Database example cluster:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import clickhousedbops:index/database:Database example cluster:databasename
    /// ```
    /// </summary>
    [ClickhousedbopsResourceType("clickhousedbops:index/database:Database")]
    public partial class Database : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the cluster to create the database into. If omitted, the database will be created on the replica hit by the query.
        /// This field must be left null when using a ClickHouse Cloud cluster.
        /// Should be set when hitting a cluster with more than one replica.
        /// </summary>
        [Output("clusterName")]
        public Output<string?> ClusterName { get; private set; } = null!;

        /// <summary>
        /// Comment associated with the database
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// Name of the database
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The system-assigned UUID for the database
        /// </summary>
        [Output("uuid")]
        public Output<string> Uuid { get; private set; } = null!;


        /// <summary>
        /// Create a Database resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Database(string name, DatabaseArgs? args = null, CustomResourceOptions? options = null)
            : base("clickhousedbops:index/database:Database", name, args ?? new DatabaseArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Database(string name, Input<string> id, DatabaseState? state = null, CustomResourceOptions? options = null)
            : base("clickhousedbops:index/database:Database", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Database resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Database Get(string name, Input<string> id, DatabaseState? state = null, CustomResourceOptions? options = null)
        {
            return new Database(name, id, state, options);
        }
    }

    public sealed class DatabaseArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the cluster to create the database into. If omitted, the database will be created on the replica hit by the query.
        /// This field must be left null when using a ClickHouse Cloud cluster.
        /// Should be set when hitting a cluster with more than one replica.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// Comment associated with the database
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Name of the database
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public DatabaseArgs()
        {
        }
        public static new DatabaseArgs Empty => new DatabaseArgs();
    }

    public sealed class DatabaseState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the cluster to create the database into. If omitted, the database will be created on the replica hit by the query.
        /// This field must be left null when using a ClickHouse Cloud cluster.
        /// Should be set when hitting a cluster with more than one replica.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// Comment associated with the database
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Name of the database
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The system-assigned UUID for the database
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        public DatabaseState()
        {
        }
        public static new DatabaseState Empty => new DatabaseState();
    }
}
