// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Clickhousedbops
{
    /// <summary>
    /// You can use the `clickhousedbops.SettingsProfileAssociation` resource to associate a `settings_profile` to a `role` or `user` in a `ClickHouse` instance.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Clickhousedbops = Pulumi.Clickhousedbops;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var roleassociation = new Clickhousedbops.SettingsProfileAssociation("roleassociation", new()
    ///     {
    ///         SettingsProfileId = profile1.Id,
    ///         RoleId = role1.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [ClickhousedbopsResourceType("clickhousedbops:index/settingsProfileAssociation:SettingsProfileAssociation")]
    public partial class SettingsProfileAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the cluster to create the resource into. If omitted, resource will be created on the replica hit by the query.
        /// This field must be left null when using a ClickHouse Cloud cluster.
        /// When using a self hosted ClickHouse instance, this field should only be set when there is more than one replica and you are not using 'replicated' storage for user_directory.
        /// </summary>
        [Output("clusterName")]
        public Output<string?> ClusterName { get; private set; } = null!;

        /// <summary>
        /// ID of the SettingsProfileAssociation to associate the Settings profile to
        /// </summary>
        [Output("roleId")]
        public Output<string?> RoleId { get; private set; } = null!;

        /// <summary>
        /// ID of the settings profile to associate
        /// </summary>
        [Output("settingsProfileId")]
        public Output<string> SettingsProfileId { get; private set; } = null!;

        /// <summary>
        /// ID of the User to associate the Settings profile to
        /// </summary>
        [Output("userId")]
        public Output<string?> UserId { get; private set; } = null!;


        /// <summary>
        /// Create a SettingsProfileAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SettingsProfileAssociation(string name, SettingsProfileAssociationArgs args, CustomResourceOptions? options = null)
            : base("clickhousedbops:index/settingsProfileAssociation:SettingsProfileAssociation", name, args ?? new SettingsProfileAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SettingsProfileAssociation(string name, Input<string> id, SettingsProfileAssociationState? state = null, CustomResourceOptions? options = null)
            : base("clickhousedbops:index/settingsProfileAssociation:SettingsProfileAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SettingsProfileAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SettingsProfileAssociation Get(string name, Input<string> id, SettingsProfileAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new SettingsProfileAssociation(name, id, state, options);
        }
    }

    public sealed class SettingsProfileAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the cluster to create the resource into. If omitted, resource will be created on the replica hit by the query.
        /// This field must be left null when using a ClickHouse Cloud cluster.
        /// When using a self hosted ClickHouse instance, this field should only be set when there is more than one replica and you are not using 'replicated' storage for user_directory.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// ID of the SettingsProfileAssociation to associate the Settings profile to
        /// </summary>
        [Input("roleId")]
        public Input<string>? RoleId { get; set; }

        /// <summary>
        /// ID of the settings profile to associate
        /// </summary>
        [Input("settingsProfileId", required: true)]
        public Input<string> SettingsProfileId { get; set; } = null!;

        /// <summary>
        /// ID of the User to associate the Settings profile to
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public SettingsProfileAssociationArgs()
        {
        }
        public static new SettingsProfileAssociationArgs Empty => new SettingsProfileAssociationArgs();
    }

    public sealed class SettingsProfileAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the cluster to create the resource into. If omitted, resource will be created on the replica hit by the query.
        /// This field must be left null when using a ClickHouse Cloud cluster.
        /// When using a self hosted ClickHouse instance, this field should only be set when there is more than one replica and you are not using 'replicated' storage for user_directory.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// ID of the SettingsProfileAssociation to associate the Settings profile to
        /// </summary>
        [Input("roleId")]
        public Input<string>? RoleId { get; set; }

        /// <summary>
        /// ID of the settings profile to associate
        /// </summary>
        [Input("settingsProfileId")]
        public Input<string>? SettingsProfileId { get; set; }

        /// <summary>
        /// ID of the User to associate the Settings profile to
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public SettingsProfileAssociationState()
        {
        }
        public static new SettingsProfileAssociationState Empty => new SettingsProfileAssociationState();
    }
}
