// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Clickhousedbops
{
    /// <summary>
    /// You can use the `clickhousedbops.SettingsProfile` resource to create a `Setting Profile` in a `ClickHouse` instance.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Clickhousedbops = Pulumi.Clickhousedbops;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var profile1 = new Clickhousedbops.SettingsProfile("profile1", new()
    ///     {
    ///         ClusterName = "cluster",
    ///         Name = "profile1",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Settings profiles can be imported by specifying the UUID.
    /// 
    /// Find the ID of the settings profile by checking system.settings_profiles table.
    /// 
    /// ```sh
    /// $ pulumi import clickhousedbops:index/settingsProfile:SettingsProfile example xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    /// ```
    /// 
    /// It's also possible to import settings profiles by name:
    /// 
    /// ```sh
    /// $ pulumi import clickhousedbops:index/settingsProfile:SettingsProfile example name
    /// ```
    /// 
    /// IMPORTANT: if you have a multi node cluster, you need to specify the cluster name!
    /// 
    /// ```sh
    /// $ pulumi import clickhousedbops:index/settingsProfile:SettingsProfile example cluster:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import clickhousedbops:index/settingsProfile:SettingsProfile example cluster:name
    /// ```
    /// </summary>
    [ClickhousedbopsResourceType("clickhousedbops:index/settingsProfile:SettingsProfile")]
    public partial class SettingsProfile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the cluster to create the resource into. If omitted, resource will be created on the replica hit by the query.
        /// This field must be left null when using a ClickHouse Cloud cluster.
        /// When using a self hosted ClickHouse instance, this field should only be set when there is more than one replica and you are not using 'replicated' storage for user_directory.
        /// </summary>
        [Output("clusterName")]
        public Output<string?> ClusterName { get; private set; } = null!;

        /// <summary>
        /// List of setting profile names to inherit from
        /// </summary>
        [Output("inheritFroms")]
        public Output<ImmutableArray<string>> InheritFroms { get; private set; } = null!;

        /// <summary>
        /// Name of the settings profile
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a SettingsProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SettingsProfile(string name, SettingsProfileArgs? args = null, CustomResourceOptions? options = null)
            : base("clickhousedbops:index/settingsProfile:SettingsProfile", name, args ?? new SettingsProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SettingsProfile(string name, Input<string> id, SettingsProfileState? state = null, CustomResourceOptions? options = null)
            : base("clickhousedbops:index/settingsProfile:SettingsProfile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SettingsProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SettingsProfile Get(string name, Input<string> id, SettingsProfileState? state = null, CustomResourceOptions? options = null)
        {
            return new SettingsProfile(name, id, state, options);
        }
    }

    public sealed class SettingsProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the cluster to create the resource into. If omitted, resource will be created on the replica hit by the query.
        /// This field must be left null when using a ClickHouse Cloud cluster.
        /// When using a self hosted ClickHouse instance, this field should only be set when there is more than one replica and you are not using 'replicated' storage for user_directory.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        [Input("inheritFroms")]
        private InputList<string>? _inheritFroms;

        /// <summary>
        /// List of setting profile names to inherit from
        /// </summary>
        public InputList<string> InheritFroms
        {
            get => _inheritFroms ?? (_inheritFroms = new InputList<string>());
            set => _inheritFroms = value;
        }

        /// <summary>
        /// Name of the settings profile
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public SettingsProfileArgs()
        {
        }
        public static new SettingsProfileArgs Empty => new SettingsProfileArgs();
    }

    public sealed class SettingsProfileState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the cluster to create the resource into. If omitted, resource will be created on the replica hit by the query.
        /// This field must be left null when using a ClickHouse Cloud cluster.
        /// When using a self hosted ClickHouse instance, this field should only be set when there is more than one replica and you are not using 'replicated' storage for user_directory.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        [Input("inheritFroms")]
        private InputList<string>? _inheritFroms;

        /// <summary>
        /// List of setting profile names to inherit from
        /// </summary>
        public InputList<string> InheritFroms
        {
            get => _inheritFroms ?? (_inheritFroms = new InputList<string>());
            set => _inheritFroms = value;
        }

        /// <summary>
        /// Name of the settings profile
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public SettingsProfileState()
        {
        }
        public static new SettingsProfileState Empty => new SettingsProfileState();
    }
}
